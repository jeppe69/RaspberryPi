#The Purpose:

I have been looking for a good guide to build a TimelapseRPi that runs on battery and with a safe way to shut down the Pi after 'photo session'. 
I found out pretty early that just pulling battery plug from Pi when done capturing pics can very effectively brick the USBkey I'm using for storage. In order to mend this I added a Tactile button that, when pressed, initiate a clean 'shutdown' on my Raspberry Pi.

#The ingredients:

-Raspberry Pi model A or B (I used B for setting things up and then transferred everything to a model A).
-Raspberry Pi Camera Board.
-SD card with Raspbian –  I used the raspbian image available at http://www.raspberrypi.org/downloads/ using NOOBS should work nicely too.
-USB to MicroUSB cable.
-USB key to store the python script and storage for jpegs.
-2x female<-->female jumper cable to connect Tact Button to GPIO.
-Tactile Button.
-Battery pack. I use 5vDC 1000mA pack which gives me many hours of capturing.
-Flexible Arm for Camera Board (Optional).

#Connecting tactile button to GPIO:

Using female to female jumper cables connect the tactile button to GPIO pins 3 and 6 so that when button is pressed those pins will be shorted. Pin 3 can be changed in the python script by changing variable 'offpin' to the I/O pin you fancy. Pin 6 can be changed to any GND pin on GPIO

#Code:

It's python code and I've tried to make it light & easy. Name: timelapse.py

#There are a few things that need to be set up on the Rpi:

First of all there's raspi-config: -expand filesystem, -enable boot to desktop... choose Console, -enable camera.
	
Update your Raspbian:
 # apt-get update && apt-get upgrade -y

Install required programs:
 # apt-get install python-picamera vim mencoder (vim is optional but it's MY favorite editor)

Create partition with ext4 File System on the USB key and mount it. 
Create mount point:
 # mkdir /mnt/stills

Find your USB key by inserting it and then type # dmesg | tail the device shown should be your USB device. In my case, and most likely your case too, it's /dev/sda
	
Next some fdisk magic:
**WARNING THIS WILL ERASE ALL DATA STORED ON YOUR USB DEVICE**
 # fdisk /dev/sda (or what device yourUSBkey is)
'p' – print current partition setup on screen
Remove all existing partitions:
'd' followed by number of partition to delete (repeat till all are gone)
When USB device is clean hit:
'n' to make new partition
'p'' for primary
'enter' (default partition number)
'enter' (default start sector)
'enter'  (default end sector)
't' set partition type
'83'' linux
'w' write parition table and exit FDISK
	
Turn your new partition into ext4 FS:
 # mkfs.ext4 /dev/sda1
	
To mount USBkey on boot:
 # vim /etc/fstab and add the following line:
/dev/sda1       /mnt/stills     ext4    defaults          0       0

Once fstab is saved mount your USB key by typing
 # mount /dev/sda1

Put timelapse.py in /mnt/stills
	
To make the RPi automatically begin capturing timelapse sequense on boot edit /etc/rc.local:
 # vim /etc/rc.local
Almost at the bottom just before the line that reads 'exit 0' add the following:
...
python /mnt/stills/timelapse.py &
exit 0

#GO!

With Tact Button, CameraBoard and USB key connected to Rpi place your machine of wonder with camera pointing toward something nice (clouds are awesome) and connect the battery. Pi will boot up and after a few seconds the LED on cameraboard will glow red, Pi is now capturing your timelapse stills. When you are done, press the Tact Button and Rpi will do a poweroff.

#Turning jpegs into AVI-clip:

I usually just move the jpgs to my PC to speed up the rendering process, Raspberry Pi is a most awesome little computer but there are faster machines out there. So here's how I do it.
I first make a 'playlist' for mencoder, the ls options will sort the files by  modified timestamp so no copying until you've got your list made, (unless you change the sorting options to sort on filename instead of last-modified-timestamp.)

move USB key to PC
 # cd /mnt/stills (your USB Key with stored.jpgs)
 # mkdir ~/pixfolder
 # ls -ltr *.jpg | awk '{print $9}' > ~/pixfolder/timelapse.txt

Next move the jpegs from USB-key to PC:
 # mv *.jpg /home/user/pixfolder/

Lastly have mencoder render your film
 # cd ~/pixfolder
 # mencoder -nosound -ovc lavc -lavcopts vcodec=mpeg4:aspect=16/9:vbitrate=8000000 -vf scale=1920:1080 -o timelapse.avi -mf type=jpeg:fps=24 mf://@timelapse.txt




If you don't want the LED on the cameraboard to glow when camera is active edit /boot/config and make sure the following line is present: disable_camera_led=1

If you find errors in these instructions please feel free to mail me: jesper.bergman@gmail.com

good luck!
